volumes:
  postgres-data:
    driver: local
  kestra-data:
    driver: local

services:
  postgres:
    image: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: kestra
      POSTGRES_USER: kestra
      POSTGRES_PASSWORD: k3str4
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 10
  kestra:
    image: kestra/kestra:latest
    container_name: kestra
    entrypoint: /bin/bash
    user: "root"
    command: ["/app/start.sh"]
    volumes:
      - kestra-data:/app/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/kestra-wd:/tmp/kestra-wd
      - ./config/config.yaml:/app/config.yaml:ro
      - ./start.sh:/app/start.sh:ro
      - ./workflows:/app/workflows
      - ../ansible:/app/storage/demo/_files/ansible
      - ../packer:/app/storage/demo/_files/packer
    
    environment:
      - SECRET_DOCKERHUB_USERNAME=${SECRET_DOCKERHUB_USERNAME}
      - SECRET_DOCKERHUB_PASSWORD=${SECRET_DOCKERHUB_PASSWORD}
      - SECRET_GITHUB_ACCESS_TOKEN=${SECRET_GITHUB_ACCESS_TOKEN}
      - SECRET_PATREON_TOKEN=${SECRET_PATREON_TOKEN}
      - SECRET_TERRAFORM_TOKEN=${SECRET_TERRAFORM_TOKEN}
      - SECRET_TSIG_KEY_HOME=${SECRET_TSIG_KEY_HOME}
      - SECRET_SSH_KEY=${SECRET_SSH_KEY}
      
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_started
